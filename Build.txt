Siliko uses CMake <http://www.cmake.org> to automate its build setup. The build
system is tested and designed to work with the following operating systems
and generators:

* Linux: Unix Makefiles
* FreeBSD: Unix Makefiles
* OS X: Unix Makefiles
* Microsoft Windows: NMake Makefiles

The build system is tested with the following compilers:

* Linux: GCC and Clang
* FreeBSD: Clang
* OS X: Clang
* Windows: Visual C++ (cl.exe)

To build Siliko, using the default values, create a directory called Build,
then cd into the directory:

mkdir Build
cd Build

In the Build directory, you will need to run the cmake command. On Mac OS X,
FreeBSD, and Linux, the default generator is the Unix Makefiles generator.
Running cmake without specifying a generator suffices, but you will need to
point cmake to the location of Siliko's source files:

cmake ..

On Windows, you will need to specify the NMake Makefiles generator with
-G "NMake Makefiles".

cmake -G "NMake Makefiles" ..

You will also need to build in the a Visual Studio command prompt, rather than
the default command prompt.

There are additional options that you can specify
* BUILD_TESTS: Build programs used for testing the library. Default On.
* BUILD_GUI:   Build a GUI frontend for the library. Default On.

Use -D, followed by teh option name to specify these options. For example to disable
building tests:

cmake .. -DBUILD_TESTS=Off

= Building an Installation Package

Siliko is configured to build an installer using the Nullsoft Scriptable Install
System on Windows, and a Drag-and-Drop disk image on OS X. For other systems,
It's assumed that an imediate installation suffices, and that package
maintainers for each system will build installation packages using their own
processes. To build an installation package on Windows and OS X, build the target
"package" with make or nmake.

If you are using external tools to build a package file, such as an RPM or DEB
package, you can use the DESTDIR variable to make to specify a staging location
to install the packages:

make DESTDIR=~/build/stage install
